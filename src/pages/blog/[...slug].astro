---
import { render } from "astro:content";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { Button } from "bits-ui";
import BaseLayout from "../../layout/BaseLayout.astro";
import RenderTags from "../../components/RenderTags.svelte";

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    return posts.map((post) => ({
        params: { slug: post.id },
        props: post,
    }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await render(post);

const postData = post.data;

const safeTitle = postData.meta_title ?? postData.title;
const safeTags = postData.blog_tags ?? [];
---

<BaseLayout
    title={`${safeTitle} | lm04/blog`}
    description={postData.description}
>
    <Button.Root
        class={`text-stone-500 hover:underline hover:underline-offset-2`}
        href={"/blog"}
    >
        &larr; Back
    </Button.Root>

    <article
        class={`prose prose-invert max-w-[96ch] prose-headings:text-amber-50 text-amber-50 mt-2`}
    >
        <hgroup>
            <time
                class={`text-stone-500 text-sm`}
                datetime={postData.publish_date.toISOString()}
            >
                Published on
                {
                    postData.publish_date.toLocaleDateString("en-us", {
                        year: "numeric",
                        month: "long",
                        day: "2-digit",
                    })
                }
            </time>

            <h1 class={`font-amulya font-bold md:text-3xl text-2xl mb-2`}>
                {postData.title}
            </h1>

            <span class={`prose-ul:list-none prose-ul:p-0`}>
                <RenderTags tags={safeTags} />
            </span>
        </hgroup>

        <div class={`max-w-[96ch]`}>
            <Content />
        </div>
    </article>
</BaseLayout>
